/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './app/routes/__root'
import { Route as AccountRouteImport } from './app/routes/account/route'
import { Route as PublicRouteImport } from './app/routes/_public/route'
import { Route as AccountIndexImport } from './app/routes/account/index'
import { Route as PublicIndexImport } from './app/routes/_public/index'
import { Route as AccountLoansImport } from './app/routes/account/loans'
import { Route as AccountDebtsImport } from './app/routes/account/debts'
import { Route as AccountDashboardImport } from './app/routes/account/dashboard'
import { Route as PublicSignUpImport } from './app/routes/_public/sign-up'
import { Route as PublicSignInImport } from './app/routes/_public/sign-in'

// Create/Update Routes

const AccountRouteRoute = AccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => rootRoute,
} as any)

const PublicRouteRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const AccountIndexRoute = AccountIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AccountRouteRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicRouteRoute,
} as any)

const AccountLoansRoute = AccountLoansImport.update({
  id: '/loans',
  path: '/loans',
  getParentRoute: () => AccountRouteRoute,
} as any)

const AccountDebtsRoute = AccountDebtsImport.update({
  id: '/debts',
  path: '/debts',
  getParentRoute: () => AccountRouteRoute,
} as any)

const AccountDashboardRoute = AccountDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AccountRouteRoute,
} as any)

const PublicSignUpRoute = PublicSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => PublicRouteRoute,
} as any)

const PublicSignInRoute = PublicSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => PublicRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRoute
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountRouteImport
      parentRoute: typeof rootRoute
    }
    '/_public/sign-in': {
      id: '/_public/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof PublicSignInImport
      parentRoute: typeof PublicRouteImport
    }
    '/_public/sign-up': {
      id: '/_public/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof PublicSignUpImport
      parentRoute: typeof PublicRouteImport
    }
    '/account/dashboard': {
      id: '/account/dashboard'
      path: '/dashboard'
      fullPath: '/account/dashboard'
      preLoaderRoute: typeof AccountDashboardImport
      parentRoute: typeof AccountRouteImport
    }
    '/account/debts': {
      id: '/account/debts'
      path: '/debts'
      fullPath: '/account/debts'
      preLoaderRoute: typeof AccountDebtsImport
      parentRoute: typeof AccountRouteImport
    }
    '/account/loans': {
      id: '/account/loans'
      path: '/loans'
      fullPath: '/account/loans'
      preLoaderRoute: typeof AccountLoansImport
      parentRoute: typeof AccountRouteImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof PublicRouteImport
    }
    '/account/': {
      id: '/account/'
      path: '/'
      fullPath: '/account/'
      preLoaderRoute: typeof AccountIndexImport
      parentRoute: typeof AccountRouteImport
    }
  }
}

// Create and export the route tree

interface PublicRouteRouteChildren {
  PublicSignInRoute: typeof PublicSignInRoute
  PublicSignUpRoute: typeof PublicSignUpRoute
  PublicIndexRoute: typeof PublicIndexRoute
}

const PublicRouteRouteChildren: PublicRouteRouteChildren = {
  PublicSignInRoute: PublicSignInRoute,
  PublicSignUpRoute: PublicSignUpRoute,
  PublicIndexRoute: PublicIndexRoute,
}

const PublicRouteRouteWithChildren = PublicRouteRoute._addFileChildren(
  PublicRouteRouteChildren,
)

interface AccountRouteRouteChildren {
  AccountDashboardRoute: typeof AccountDashboardRoute
  AccountDebtsRoute: typeof AccountDebtsRoute
  AccountLoansRoute: typeof AccountLoansRoute
  AccountIndexRoute: typeof AccountIndexRoute
}

const AccountRouteRouteChildren: AccountRouteRouteChildren = {
  AccountDashboardRoute: AccountDashboardRoute,
  AccountDebtsRoute: AccountDebtsRoute,
  AccountLoansRoute: AccountLoansRoute,
  AccountIndexRoute: AccountIndexRoute,
}

const AccountRouteRouteWithChildren = AccountRouteRoute._addFileChildren(
  AccountRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof PublicRouteRouteWithChildren
  '/account': typeof AccountRouteRouteWithChildren
  '/sign-in': typeof PublicSignInRoute
  '/sign-up': typeof PublicSignUpRoute
  '/account/dashboard': typeof AccountDashboardRoute
  '/account/debts': typeof AccountDebtsRoute
  '/account/loans': typeof AccountLoansRoute
  '/': typeof PublicIndexRoute
  '/account/': typeof AccountIndexRoute
}

export interface FileRoutesByTo {
  '/sign-in': typeof PublicSignInRoute
  '/sign-up': typeof PublicSignUpRoute
  '/account/dashboard': typeof AccountDashboardRoute
  '/account/debts': typeof AccountDebtsRoute
  '/account/loans': typeof AccountLoansRoute
  '/': typeof PublicIndexRoute
  '/account': typeof AccountIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_public': typeof PublicRouteRouteWithChildren
  '/account': typeof AccountRouteRouteWithChildren
  '/_public/sign-in': typeof PublicSignInRoute
  '/_public/sign-up': typeof PublicSignUpRoute
  '/account/dashboard': typeof AccountDashboardRoute
  '/account/debts': typeof AccountDebtsRoute
  '/account/loans': typeof AccountLoansRoute
  '/_public/': typeof PublicIndexRoute
  '/account/': typeof AccountIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/account'
    | '/sign-in'
    | '/sign-up'
    | '/account/dashboard'
    | '/account/debts'
    | '/account/loans'
    | '/'
    | '/account/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/sign-in'
    | '/sign-up'
    | '/account/dashboard'
    | '/account/debts'
    | '/account/loans'
    | '/'
    | '/account'
  id:
    | '__root__'
    | '/_public'
    | '/account'
    | '/_public/sign-in'
    | '/_public/sign-up'
    | '/account/dashboard'
    | '/account/debts'
    | '/account/loans'
    | '/_public/'
    | '/account/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  PublicRouteRoute: typeof PublicRouteRouteWithChildren
  AccountRouteRoute: typeof AccountRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  PublicRouteRoute: PublicRouteRouteWithChildren,
  AccountRouteRoute: AccountRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_public",
        "/account"
      ]
    },
    "/_public": {
      "filePath": "_public/route.tsx",
      "children": [
        "/_public/sign-in",
        "/_public/sign-up",
        "/_public/"
      ]
    },
    "/account": {
      "filePath": "account/route.tsx",
      "children": [
        "/account/dashboard",
        "/account/debts",
        "/account/loans",
        "/account/"
      ]
    },
    "/_public/sign-in": {
      "filePath": "_public/sign-in.tsx",
      "parent": "/_public"
    },
    "/_public/sign-up": {
      "filePath": "_public/sign-up.tsx",
      "parent": "/_public"
    },
    "/account/dashboard": {
      "filePath": "account/dashboard.tsx",
      "parent": "/account"
    },
    "/account/debts": {
      "filePath": "account/debts.tsx",
      "parent": "/account"
    },
    "/account/loans": {
      "filePath": "account/loans.tsx",
      "parent": "/account"
    },
    "/_public/": {
      "filePath": "_public/index.tsx",
      "parent": "/_public"
    },
    "/account/": {
      "filePath": "account/index.tsx",
      "parent": "/account"
    }
  }
}
ROUTE_MANIFEST_END */
